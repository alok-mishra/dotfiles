{
    ////// VSCODE //////
    "editor.fontFamily": "CaskaydiaCove Nerd Font, Cascadia Code NF, Cascadia Code, MesloLGS Nerd Font, Inconsolata Nerd Font, Consolas, FontAwesome",
    "editor.fontLigatures": "'zero', '// => !== == === < > <= >= && || !'",
    // "editor.fontSize": 15,

    // "editor.stickyScroll.enabled": false,

    "editor.stickyScroll.maxLineCount": 1,

    "editor.acceptSuggestionOnCommitCharacter": false,
    "editor.bracketPairColorization.enabled": true,
    "editor.cursorBlinking": "phase",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.detectIndentation": true,

    "editor.formatOnType": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "modificationsIfAvailable",

    "editor.guides.bracketPairs": "active",
    "editor.minimap.renderCharacters": false,
    "editor.minimap.size": "fill",

    "editor.quickSuggestions": { "strings": "on" },

    // "editor.scrollbar.vertical": "hidden",
    "editor.selectionHighlight": false,
    "editor.suggest.insertMode": "replace",
    "editor.suggest.showWords": false,
    "editor.suggestSelection": "recentlyUsedByPrefix",
    // "editor.wordWrap": "on", // use toggle word wrap (alt+z)
    "editor.wordWrapColumn": 120,
    // "editor.lineNumbers": "relative",

    "editor.unfoldOnClickAfterEndOfLine": true,

    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "explorer.copyRelativePathSeparator": "/",
    "explorer.openEditors.visible": 1,
    // "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.patterns": {
        "postcss.config.js": "tailwind.*",
        "docker-compose.yml": ".env, php-config.ini, .db",
        "exam.json": "exam.js, expert_exam.scss, manifest.hbs",
        "package.json": "package-lock.json, yarn.lock, yarn-error.log, rollup.config.js, postcss.config.js, tsconfig.json",
        "wp-config.php": "wp-*.php"
    },

    "files.eol": "\n",
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "files.hotExit": "off",

    "files.exclude": {
        "**/desktop.ini": true
    },

    "files.associations": {
        "config": "shellscript",
        "*.aliases": "shellscript",
        "*.toml": "ini",
        "*.tridactylrc": "vimrc",
        "*.jscad": "javascript"
    },

    "search.quickOpen.includeHistory": true,
    "search.quickOpen.history.filterSortOrder": "recency",

    ////// TERMINAL //////

    "terminal.external.windowsExec": "bash.exe",
    // "terminal.integrated.defaultProfile.windows": "GitBash",
    "terminal.integrated.defaultProfile.windows": "GitZsh", // Not launching ZSH via bash anymore, doesn't work with bc4
    "terminal.integrated.defaultProfile.linux": "zsh",
    "terminal.integrated.persistentSessionReviveProcess": "never",
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.fontFamily": "CaskaydiaCove Nerd Font, MesloLGS NF, Inconsolata Nerd Font, Cascadia Code, Fira Code, Consolas",
    "terminal.integrated.stickyScroll.enabled": false,
    "terminal.integrated.enableVisualBell": false,
    "terminal.integrated.scrollback": 10000,
    // "terminal.integrated.fontSize": 14,

    "terminal.integrated.automationProfile.windows": {
        "path": "cmd.exe"
    },

    "terminal.integrated.profiles.windows": {
        "PowerShell": null,
        "Windows PowerShell": null,
        "Command Prompt": null,
        "Git Bash": null,
        "GitBash": {
            "path": "sh.exe", // Can't remote WSL in windows features due to Docker (conflicts with bash.exe from GitBash)
            "args": ["--login", "-i"]
        },
        "GitZsh": {
            "path": "zsh.exe", // via GitBash
            "args": ["--login", "-i"]
        },
        "WSL": {
            "path": "C:\\WINDOWS\\System32\\wsl.exe",
            "args": ["-d", "Ubuntu"]
        },
        "MSYS2": {
            "path": "zsh.exe", // via MSYS2 MinGW64
            "args": ["--login", "-i"],
            "env": {
                "CHERE_INVOKING": "1",
                "MSYSTEM": "MINGW64",
                "MSYS2_PATH_TYPE": "inherit"
            }
        }
    },

    "terminal.integrated.profiles.linux": {
        "bash": {
            "path": "bash",
            "icon": "terminal-bash"
        },
        "tmux": {
            "path": "tmux",
            "icon": "terminal-tmux"
        },
        "zsh": {
            "path": "zsh",
            "icon": "terminal-linux"
        }
    },

    ////// THEME //////
    "workbench.colorTheme": "Gruvbox Dark Hard",
    "workbench.iconTheme": "catppuccin-mocha",

    "workbench.colorCustomizations": {
        "editorSuggestWidget.selectedBackground": "#076678",
        "tab.activeForeground": "#d3869b",
        "tab.activeBorder": "#b16286",
        "editorCursor.foreground": "#ebdbb2",
        "tab.activeBackground": "#282828",
        "window.activeBorder": "#458588",
        "window.inactiveBorder": "#d65d0e",
        "titleBar.activeBackground": "#002826",
        "titleBar.inactiveBackground": "#220806",
        "editorStickyScroll.shadow": "#b8bb26"
    },
    "workbench.editorAssociations": {
        "*.svg": "svgPreview.previewEditor"
    },
    "workbench.editor.limit.value": 10,
    "workbench.editor.limit.enabled": true,
    "workbench.editor.enablePreviewFromQuickOpen": false,

    "workbench.layoutControl.type": "menu",
    "workbench.list.defaultFindMode": "filter",
    "workbench.settings.openDefaultSettings": false,
    "workbench.startupEditor": "newUntitledFile",

    "workbench.activityBar.orientation": "vertical",

    "window.restoreWindows": "none",
    "window.menuBarVisibility": "toggle",
    "window.commandCenter": false,
    "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}",
    // "window.openFoldersInNewWindow":"on",

    "zenMode.centerLayout": false,
    "zenMode.fullScreen": false,

    ////// NEOVIM //////
    "vscode-neovim.useWSL": true, // this is all, other defaults will pick up .config/nvim

    ////// VIM //////

    "editor.experimentalEditContextEnabled": false, // fixes insertions of j and k characters in normal mode

    "extensions.experimental.affinity": {
        "vscodevim.vim": 1,
        "asvetliakov.vscode-neovim": 1
    },

    "vim.leader": "<space>",
    // "vim.leader": ",",
    "vim.hlsearch": true,
    // "vim.searchHighlightColor": "rgba(104, 157, 106, 0.4)", // #689D6A
    "vim.searchHighlightColor": "rgba(214, 96, 16, 0.4)", // #D65D0E
    "vim.easymotion": true,
    "vim.foldfix": true,

    "vim.handleKeys": {
        "<C-a>": false, // select
        "<C-b>": false, // vscode
        "<C-c>": false, // copy
        "<C-f>": false, // find
        "<C-k>": false, // vscode
        // "<C-v>": false, // paste, disabled to work in command mode (works in insert anyway)
        "<C-y>": false // redo
    },

    // Native Undo and Redo
    "vim.normalModeKeyBindings": [
        {
            "before": ["u"],
            "after": [],
            "commands": [{ "command": "undo" }]
        },
        {
            "before": ["C-r"],
            "after": [],
            "commands": [{ "command": "redo" }]
        },
        { "before": ["L"], "after": ["$"] },
        { "before": ["H"], "after": ["0"] }
    ],

    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": ["leader", "s"],
            "after": [],
            "commands": [{ "command": "workbench.action.files.save", "args": [] }]
        }
    ],

    "vim.normalModeKeyBindingsNonRecursive": [
        { "before": ["leader", "b"], "commands": [{ "command": "workbench.action.tasks.build", "args": [] }] },
        { "before": ["leader", "e"], "commands": [{ "command": "editor.action.marker.next", "args": [] }] },
        {
            "before": ["leader", "m"],
            "commands": [
                { "command": "workbench.action.editor.nextChange", "args": [] },
                { "command": "workbench.action.compareEditor.nextChange", "args": [] }
            ]
        },

        {
            "before": ["leader", "S"],
            "commands": [{ "command": "workbench.action.files.saveWithoutFormatting", "args": [] }]
        },
        { "before": ["M-s"], "commands": ["workbench.action.files.save"] },
        { "before": ["<C-p>"], "commands": ["workbench.action.quickOpen"] },

        // NeoVim Migration
        { "before": ["<esc>"], "commands": [{ "command": ":nohl", "args": [] }] }, // clear search highlight
        { "before": ["leader", "r"], "commands": [{ "command": "workbench.action.openRecent", "args": [] }] },
        { "before": ["leader", "leader"], "commands": [{ "command": "workbench.action.quickOpen", "args": [] }] },
        { "before": ["leader", "/"], "commands": [{ "command": "workbench.action.findInFiles", "args": [] }] },

        // MACROS
        // Yank between double quotes to Clipboard
        {
            "before": ["leader", "y"],
            "after": ["\"", "*", "y", "i", "\"", "<esc>"]
        },
        {
            // Paste Clipboard between html tags
            "before": ["leader", "t"],
            "after": ["c", "i", "t", "<esc>", "\"", "*", "p"]
        },
        {
            // Paste Clipboard between single quotes
            "before": ["leader", "'"],
            "after": ["v", "i", "'", "\"", "*", "P"]
        },
        {
            // Paste Clipboard between double quotes
            "before": ["leader", "\""],
            "after": ["v", "i", "\"", "\"", "*", "P"]
        },
        {
            // Yank visual selection to Clipboard
            "before": ["leader", "c"],
            "after": ["\"", "*", "y"]
        },
        {
            // Paste Clipboard between double quotes and remove newline
            "before": ["@", "\""],
            "after": ["v", "i", "\"", "\"", "*", "P", "J", "x"]
        },
        {
            // Paste yank between quotes
            "before": ["leader", "v"],
            "after": ["v", "i", "\"", "P", "y", "i", "\"", "<esc>"]
        },
        {
            // Paste last yank
            "before": ["leader", "p"],
            "after": ["\"", "0", "P"]
        },
        {
            // Paste Clipboard between brackets and add quotes
            "before": ["leader", "]"],
            "after": [
                "v",
                "i",
                "]",
                "\"",
                "*",
                "P",
                "v",
                "i",
                "]",
                "b",
                "$",
                "I",
                "\"",
                "<esc>",
                "v",
                "i",
                "]",
                "b",
                "$",
                "A",
                "\"",
                ",",
                "<esc>"
            ]
        },
        {
            // Paste Clipboard between html tags
            "before": ["leader", "t"],
            "after": ["c", "i", "t", "<esc>", "\"", "*", "p"]
        },
        {
            // Paste Clipboard between single quotes
            "before": ["leader", "'"],
            "after": ["v", "i", "'", "\"", "*", "P"]
        },
        {
            // Paste Clipboard between double quotes
            "before": ["leader", "\""],
            "after": ["v", "i", "\"", "\"", "*", "P"]
        },
        {
            // Paste Clipboard between double quotes
            "before": ["leader", "c"],
            "after": ["v", "i", "\"", "\"", "*", "y"]
        },
        {
            // Paste Clipboard between double quotes and remove newline
            "before": ["@", "\""],
            "after": ["v", "i", "\"", "\"", "*", "P", "J", "x"]
        },
        {
            // Paste yank between quotes
            "before": ["leader", "v"],
            "after": ["v", "i", "\"", "P", "y", "i", "\"", "<esc>"]
        },
        {
            // Paste last yank
            "before": ["leader", "p"],
            "after": ["\"", "0", "P"]
        },
        {
            // Paste Clipboard between brackets and add quotes
            "before": ["leader", "]"],
            "after": [
                "v",
                "i",
                "]",
                "\"",
                "*",
                "P",
                "v",
                "i",
                "]",
                "b",
                "$",
                "I",
                "\"",
                "<esc>",
                "v",
                "i",
                "]",
                "b",
                "$",
                "A",
                "\"",
                ",",
                "<esc>"
            ]
        }
    ],

    ////// FORMATTING //////
    "[go]": {
        "editor.defaultFormatter": "golang.go",
        "editor.insertSpaces": true,
        "editor.codeActionsOnSave": {}
    },
    "[handlebars]": {
        "editor.defaultFormatter": "vscode.html-language-features"
    },
    "[html]": {
        "editor.defaultFormatter": "vscode.html-language-features"
    },
    "[javascript]": {
        // "editor.defaultFormatter": "vscode.typescript-language-features",
        // "editor.formatOnSaveMode": "modificationsIfAvailable",
    },
    "[json]": {
        "editor.tabSize": 2
    },
    "[jsonc]": {
        // "editor.formatOnSave": false
    },
    "[php]": {
        "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
    },
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter"
    },
    "[svelte]": {
        "editor.defaultFormatter": "svelte.svelte-vscode"
    },
    "[xml]": {
        "editor.defaultFormatter": "DotJoshJohnson.xml"
    },
    "[yaml]": {
        "editor.tabSize": 2
    },

    "html.autoClosingTags": false,
    "html.format.contentUnformatted": "pre,code,textarea,b",
    "html.format.unformatted": "b, span",
    "html.format.wrapLineLength": 0,

    "prettier.tabWidth": 4,
    "prettier.printWidth": 120,
    "prettier.singleQuote": true,
    "prettier.bracketSameLine": true,

    ////// MISCELLANEOUS //////
    // "breadcrumbs.enabled": false,
    "extensions.ignoreRecommendations": true,
    "markdown.preview.breaks": true,
    "php.validate.enable": false,
    "emmet.includeLanguages": {
        "javascript": "javascriptreact",
        "postcss": "css",
        "vue-html": "html"
    },
    "security.workspace.trust.enabled": false,
    "telemetry.telemetryLevel": "off",

    "scm.diffDecorationsIgnoreTrimWhitespace": "true",
    "scm.showChangesSummary": false,
    "scm.showOutgoingChanges": "never",

    "reactSnippets.settings.prettierEnabled": true,
    "git.enableSmartCommit": true,
    "git.terminalAuthentication": false,

    ////// EXTENSIONS //////
    "github.copilot.enable": {
        "*": true,
        "plaintext": true,
        "markdown": true,
        "scminput": false,
        "yaml": true
    },

    "svelte.plugin.css.diagnostics.enable": false,
    "svelte.enable-ts-plugin": true,

    "tailwindCSS.emmetCompletions": true,
    "tailwindCSS.includeLanguages": {
        "hbs": "html",
        "php": "html"
    },

    ////// AREA UNDER DEVELOPMENT //////
    "settingsSync.keybindingsPerPlatform": false,
    "python.jediEnabled": false,
    "python.linting.pylintEnabled": true,
    "liveServer.settings.donotShowInfoMsg": true,
    "liveServer.settings.port": 5656,
    "editor.inlineSuggest.enabled": true,

    "remote.SSH.useExecServer": false,
    "remote.SSH.remotePlatform": {
        "ywcad": "linux",
        "hhf": "linux",
        "home": "linux"
    },
    "diffEditor.ignoreTrimWhitespace": true,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "update.mode": "manual",
    "editor.accessibilitySupport": "off",
    "accessibility.voice.keywordActivation": "inlineChat",
    "typescript.disableAutomaticTypeAcquisition": true,
    "security.allowedUNCHosts": ["wsl.localhost", "HASSIO"],
    "workbench.editor.empty.hint": "hidden",

    "markdown-pdf.displayHeaderFooter": false,
    "markdown-pdf.margin.top": "1.0cm",
    "markdown-pdf.scale": 0.9,

    // "git-graph.openNewTabEditorGroup": "Two",

    "codeium.enableConfig": {
        "*": true,
        "markdown": true,
        "scad": true,
        "plaintext": true
    },

    "gitblame.inlineMessageEnabled": true,
    "gitblame.inlineMessageFormat": "${author.name} • ${author.date}",
    "openscad.launchPath": "openscad.exe",

    "intelephense.format.braces": "k&r",
    "timeline.pageSize": 10,
    "accessibility.signals.terminalBell": {
        "sound": "off"
    },
    "http.proxySupport": "on", // set proxy support to on in the office for exensions
    "cursor.cpp.disabledLanguages": ["scminput"],
    "cursor.general.disableHttp2": true,
    "cursor.general.disableHttp1SSE": true,
    "cursor.general.gitGraphIndexing": "enabled",
    "workbench.editor.enablePreview": false
}
